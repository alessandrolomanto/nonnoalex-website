name: ci

on:
  push:
    branches:
      - 'master'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
        name: Set env
        with:
          run: |
            echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
            echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
            echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"
      -
        name: Print Version
        run: |
          echo ${{steps.version_step.outputs.version_tag}}
          echo ${{steps.version_step.outputs.latest_tag}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          registry: registry.nonnoalex.dev
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        name: PrepareReg Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            registry.nonnoalex.dev/nonnoalex/nonnoalex-website:${{env.VERSION_TAG}}
          build-args: |
            ${{steps.version_step.outputs.version}}
            VERSION_TAG=${{ env.VERSION_TAG }}
      #-
      #  name: Build and push
      #  id: docker_build
      #  uses: docker/build-push-action@v2
      #  with:
      #    push: true
      #    tags: registry.nonnoalex.dev/nonnoalex/nonnoalex-website:${{ env.RELEASE_VERSION }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
